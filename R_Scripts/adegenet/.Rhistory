IDs = IDs[,1]
IDs = droplevels(IDs)
length(IDs)
DNA = read.table("4stru_NewfoundlandRF.stru", sep="\t", header=T)
subset = which(is.element(DNA$X, IDs))
length(subset)
DNA1 = DNA[subset,]
Scrambled = DNA1[sample(nrow(DNA1), nrow(DNA1), replace=FALSE),]
write.table(Scrambled, file="Subset4stru.stru", quote=F,sep="\t", row.names=F)
DNA=read.structure("Subset4stru.stru", n.ind=nrow(DNA1),n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
DNA
DNA[1:30]
temp1=seppop(DNA)
temp1$FurFarm
temp1
DNA=read.structure("Subset4stru.stru", n.ind=nrow(DNA1),n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
Parent1=DNA[1:30] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[31:60]
NewParents=hybridize(Wild, FF, n=60, pop="NewParents")
DNA=read.structure("4stru_NewfoundlandRF.stru", n.ind=147,n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
temp1=seppop(DNA)
DNA = read.table("V:\\3730Data\\377STRs\\Wildlife\\R Scripts\\R Stuff\\stackedBarggplot2\\Newfoundland_Q2.txt", sep="\t", header=T)
IDs = DNA[DNA$Wild >0.98,]
IDs = IDs[,1]
IDs = droplevels(IDs)
length(IDs)
DNA = read.table("4stru_NewfoundlandRF.stru", sep="\t", header=T)
subset = which(is.element(DNA$X, IDs))
length(subset)
DNA1 = DNA[subset,]
Scrambled = DNA1[sample(nrow(DNA1), nrow(DNA1), replace=FALSE),]
write.table(Scrambled, file="SubsetWild4stru.stru", quote=F,sep="\t", row.names=F)
DNA = read.table("V:\\3730Data\\377STRs\\Wildlife\\R Scripts\\R Stuff\\stackedBarggplot2\\Newfoundland_Q2.txt", sep="\t", header=T)
IDs = DNA[DNA$FurFarm >0.98,]
IDs = IDs[,1]
IDs = droplevels(IDs)
length(IDs)
DNA = read.table("4stru_NewfoundlandRF.stru", sep="\t", header=T)
subset = which(is.element(DNA$X, IDs))
length(subset)
DNA1 = DNA[subset,]
Scrambled = DNA1[sample(nrow(DNA1), nrow(DNA1), replace=FALSE),]
write.table(Scrambled, file="SubsetFF4stru.stru", quote=F,sep="\t", row.names=F)
DNA
DNA=read.structure("SubsetWild4stru.stru", n.ind=nrow(DNA1),n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
DNA = read.table("V:\\3730Data\\377STRs\\Wildlife\\R Scripts\\R Stuff\\stackedBarggplot2\\Newfoundland_Q2.txt", sep="\t", header=T)
IDs = DNA[DNA$Wild >0.98,]
IDs = IDs[,1]
IDs = droplevels(IDs)
DNA = read.table("4stru_NewfoundlandRF.stru", sep="\t", header=T)
subset = which(is.element(DNA$X, IDs))
DNAW = DNA[subset,]
Scrambled = DNAW[sample(nrow(DNAW), nrow(DNAW), replace=FALSE),]
write.table(Scrambled, file="SubsetWild4stru.stru", quote=F,sep="\t", row.names=F)
DNA = read.table("V:\\3730Data\\377STRs\\Wildlife\\R Scripts\\R Stuff\\stackedBarggplot2\\Newfoundland_Q2.txt", sep="\t", header=T)
IDs = DNA[DNA$FurFarm >0.98,]
IDs = IDs[,1]
IDs = droplevels(IDs)
DNA = read.table("4stru_NewfoundlandRF.stru", sep="\t", header=T)
subset = which(is.element(DNA$X, IDs))
DNAF = DNA[subset,]
Scrambled = DNAF[sample(nrow(DNAF), nrow(DNAF), replace=FALSE),]
write.table(Scrambled, file="SubsetFF4stru.stru", quote=F,sep="\t", row.names=F)
Parent1=DNA[1:nrows(DNAW)/2] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent1=DNA[1:nrow(DNAW)/2] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[nrow(DNAW)/2:nrow(DNAW)]
Parent1
Parent2
Parent1=DNA[1:nrow(DNAW)/2,] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[nrow(DNAW)/2:nrow(DNAW),]
Parent1
1:nrow(DNAW)
DNA=read.structure("SubsetWild4stru.stru", n.ind=nrow(DNAW),n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
Parent1=DNA[1:nrow(DNAW)/2] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[nrow(DNAW)/2:nrow(DNAW),]
Parent1
Parent2
nrow(DNAW)
nrow(DNAW)/2
DNA[1:nrow(DNAW)/2]
DNA[1:(nrow(DNAW)/2)]
Parent1=DNA[1:(nrow(DNAW)/2)] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[(nrow(DNAW)/2):(nrow(DNAW)),]
Parent1
Parent2
DNA=read.structure("SubsetWild4stru.stru", n.ind=nrow(DNAW),n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
Parent1=DNA[1:(nrow(DNAW)/2)] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[(nrow(DNAW)/2):(nrow(DNAW)),]
NewParentsW=hybridize(Parent1, Parent2, n=60, pop="NewParents")
DNA=read.structure("SubsetWild4stru.stru", n.ind=nrow(DNAF),n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
Parent1=DNA[1:(nrow(DNAF)/2)] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[(nrow(DNAF)/2):(nrow(DNAF)),]
NewParentsF=hybridize(Parent1, Parent2, n=60, pop="NewParents")
DNA=read.structure("SubsetWild4stru.stru", n.ind=nrow(DNAW),n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
Parent1=DNA[1:(nrow(DNAW)/2)] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[(nrow(DNAW)/2):(nrow(DNAW)),]
NewParentsW=hybridize(Parent1, Parent2, n=60, pop="NewParents")
DNA=read.structure("SubsetWild4stru.stru", n.ind=nrow(DNAF),n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
DNA=read.structure("SubsetFF4stru.stru", n.ind=nrow(DNAF),n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
Parent1=DNA[1:(nrow(DNAF)/2)] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[(nrow(DNAF)/2):(nrow(DNAF)),]
NewParentsF=hybridize(Parent1, Parent2, n=60, pop="NewParents")
DNA=read.structure("SubsetWild4stru.stru", n.ind=nrow(DNAW),n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
Parent1=DNA[1:(nrow(DNAW)/2)] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[(nrow(DNAW)/2):(nrow(DNAW)),]
NewParentsW=hybridize(Parent1, Parent2, n=60, pop="NewParents")
DNA=read.structure("SubsetFF4stru.stru", n.ind=nrow(DNAF),n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
Parent1=DNA[1:(nrow(DNAF)/2)] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[(nrow(DNAF)/2):(nrow(DNAF)),]
NewParentsF=hybridize(Parent1, Parent2, n=60, pop="NewParents")
NewParentsW
NewParentsF
DNA=read.structure("SubsetFF4stru.stru", n.ind=nrow(DNAF),n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
Parent1=DNA[1:(nrow(DNAF)/2)] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[(nrow(DNAF)/2):(nrow(DNAF)),]
NewParentsF=hybridize(Parent1, Parent2, n=60, pop="NewParentsF")
NewParentsW
NewParentsF
NewParentsF@tab
Hybrids=hybridize(NewParentsW, NewParentsF, n=60, pop="Hybrids")
DNAHyb=repool(c(NewParentsW,NewParentsF))
DNAHyb
DNAHyb=repool(c(NewParentsW,NewParentsF,Hybrids))
Hybrids=hybridize(NewParentsW, NewParentsF, n=60, pop="Hybrids")
DNAHyb=repool(c(NewParentsW,NewParentsF,Hybrids))
Hybrids=hybridize(NewParentsW, NewParentsF, n=60, pop="Hybrids")
Hybrids
DNASim = repool(c(NewParentsW,NewParentsF))
DNASim
DNASim@pop
DNASim$NewParents
DNASim@NewParents
DNASim@pop$NewParents
DNASim@pop
DNA=read.structure("SubsetWild4stru.stru", n.ind=nrow(DNAW),n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
Parent1=DNA[1:(nrow(DNAW)/2)] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[(nrow(DNAW)/2):(nrow(DNAW)),]
NewParentsW=hybridize(Parent1, Parent2, n=60, pop="NewParentsW")
DNA=read.structure("SubsetFF4stru.stru", n.ind=nrow(DNAF),n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
Parent1=DNA[1:(nrow(DNAF)/2)] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[(nrow(DNAF)/2):(nrow(DNAF)),]
NewParentsF=hybridize(Parent1, Parent2, n=60, pop="NewParentsF")
Parent1
Parent2
DNA=read.structure("SubsetWild4stru.stru", n.ind=nrow(DNAW),n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
Parent1=DNA[1:(nrow(DNAW)/2)] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[(nrow(DNAW)/2):(nrow(DNAW)-1),]
NewParentsW=hybridize(Parent1, Parent2, n=60, pop="NewParentsW")
DNA=read.structure("SubsetFF4stru.stru", n.ind=nrow(DNAF),n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
Parent1=DNA[1:(nrow(DNAF)/2)] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[(nrow(DNAF)/2):(nrow(DNAF)-1),]
NewParentsF=hybridize(Parent1, Parent2, n=60, pop="NewParentsF")
DNA=read.structure("SubsetFF4stru.stru", n.ind=nrow(DNAF),n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
DNA
DNA@tab
DNA=read.structure("SubsetWild4stru.stru", n.ind=nrow(DNAW),n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
Parent1=DNA[1:(nrow(DNAW)/2)] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[(nrow(DNAW)/2):(nrow(DNAW)-1),]
NewParentsW=hybridize(Parent1, Parent2, n=60, pop="NewParentsW")
NewParentsW
DNAF
DNA = read.table("V:\\3730Data\\377STRs\\Wildlife\\R Scripts\\R Stuff\\stackedBarggplot2\\Newfoundland_Q2.txt", sep="\t", header=T)
IDs = DNA[DNA$Wild >0.98,]
IDs = IDs[,1]
IDs = droplevels(IDs)
DNA = read.table("4stru_NewfoundlandRF.stru", sep="\t", header=T)
subset = which(is.element(DNA$X, IDs))
DNAW = DNA[subset,]
Scrambled = DNAW[sample(nrow(DNAW), nrow(DNAW), replace=FALSE),]
write.table(Scrambled, file="SubsetWild4stru.stru", quote=F,sep="\t", row.names=F)
DNA = read.table("V:\\3730Data\\377STRs\\Wildlife\\R Scripts\\R Stuff\\stackedBarggplot2\\Newfoundland_Q2.txt", sep="\t", header=T)
IDs = DNA[DNA$FurFarm >0.98,]
IDs = IDs[,1]
IDs = droplevels(IDs)
DNA = read.table("4stru_NewfoundlandRF.stru", sep="\t", header=T)
subset = which(is.element(DNA$X, IDs))
DNAF = DNA[subset,]
Scrambled = DNAF[sample(nrow(DNAF), nrow(DNAF), replace=FALSE),]
write.table(Scrambled, file="SubsetFF4stru.stru", quote=F,sep="\t", row.names=F)
DNA=read.structure("SubsetWild4stru.stru", n.ind=nrow(DNAW),n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
Parent1=DNA[1:(nrow(DNAW)/2)] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[(nrow(DNAW)/2):(nrow(DNAW)-1),]
NewParentsW=hybridize(Parent1, Parent2, n=60, pop="NewParentsW")
DNA=read.structure("SubsetFF4stru.stru", n.ind=nrow(DNAF),n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
Parent1=DNA[1:(nrow(DNAF)/2)] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[(nrow(DNAF)/2):(nrow(DNAF)-1),]
NewParentsF=hybridize(Parent1, Parent2, n=60, pop="NewParentsF")
DNA=read.structure("SubsetFF4stru.stru", n.ind=nrow(DNAF),n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
Parent1=DNA[1:(nrow(DNAF)/2),] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[(nrow(DNAF)/2):(nrow(DNAF)-1),]
NewParentsF=hybridize(Parent1, Parent2, n=60, pop="NewParentsF")
Parent1
Parent2
DNA=read.structure("SubsetWild4stru.stru", n.ind=nrow(DNAW),n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
Parent1=DNA[1:(nrow(DNAW)/2)] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[(nrow(DNAW)/2):(nrow(DNAW)-1)]
NewParentsW=hybridize(Parent1, Parent2, n=60, pop="NewParentsW")
DNA=read.structure("SubsetFF4stru.stru", n.ind=nrow(DNAF),n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
Parent1=DNA[1:(nrow(DNAF)/2)] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[(nrow(DNAF)/2):(nrow(DNAF)-1)]
NewParentsF=hybridize(Parent1, Parent2, n=60, pop="NewParentsF")
DNA=read.structure("SubsetWild4stru.stru", n.ind=nrow(DNAW),n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
NewParentsW=hybridize(Parent1, Parent2, n=60, pop="NewParentsW")
Parent2=DNA[(nrow(DNAW)/2):(nrow(DNAW)-1)]
DNA=read.structure("SubsetWild4stru.stru", n.ind=nrow(DNAW),n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
Parent1=DNA[1:(nrow(DNAW)/2)] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[(nrow(DNAW)/2):(nrow(DNAW)-1)]
NewParentsW=hybridize(Parent1, Parent2, n=60, pop="NewParentsW")
NewParentsW
DNA
DNA@tab
DNA[1:(nrow(DNAW)/2)]
head(DNA[1:(nrow(DNAW)/2)]@tab)
DNA[(nrow(DNAW)/2):(nrow(DNAW)-1)]@tab
head(DNA[(nrow(DNAW)/2):(nrow(DNAW)-1)]@tab)
DNA=read.structure("SubsetFF4stru.stru", n.ind=nrow(DNAF),n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
DNA@tab
DNA[1:(nrow(DNAF)/2)]
DNA[(nrow(DNAF)/2):(nrow(DNAF)-1)]
Parent1=DNA[1:(nrow(DNAF)/2)] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[(nrow(DNAF)/2):(nrow(DNAF)-1)]
NewParentsF=hybridize(Parent1, Parent2, n=60, pop="NewParentsF")
nrow(DNAF)
(nrow(DNAW)
)
NewParentsF=hybridize(Parent1, Parent2, n=60, pop="NewParentsF")
DNA[1:(nrow(DNAF)/2)]@tab
Parent1
Parent1@pop
NewParentsF=hybridize(Parent1, Parent2, n=60, pop="NewParentsF")
Parents1@pop
Parent1@pop
Parent2@pop
NewParentsF=hybridize(Parent1, Parent2, n=60, pop="NewParentsF")
NewParentsW
NewParentsW@pop
NewParentsF=hybridize(Parent1, Parent2, n=60, pop="NewParentsF")
update.packages("adegenet")
library(adegenet)
DNA=read.structure("SubsetFF4stru.stru", n.ind=nrow(DNAF),n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
Parent1=DNA[1:(nrow(DNAF)/2)] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[(nrow(DNAF)/2):(nrow(DNAF)-1)]
NewParentsF=hybridize(Parent1, Parent2, n=60, pop="NewParentsF")
DNA=read.structure("SubsetWild4stru.stru", n.ind=nrow(DNAW),n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
Parent1=DNA[1:(nrow(DNAW)/2)] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[(nrow(DNAW)/2):(nrow(DNAW)-1)]
Parent=DNA
NewParentsW=hybridize(Parent, Parent, n=60, pop="NewParentsW")
NewParentsW
NewParentsW@pop
DNA=read.structure("SubsetFF4stru.stru", n.ind=nrow(DNAF),n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
Parent=DNA
NewParentsF=hybridize(Parent, Parent, n=60, pop="NewParentsF")
DNA=read.structure("SubsetFF4stru.stru", n.ind=nrow(DNAF),n.loc=21,onerowperind=T,col.lab=1,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
DNA=read.structure("SubsetFF4stru.stru", n.ind=nrow(DNAF),n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
DNA=read.structure("SubsetFF4stru.stru", n.ind=nrow(DNAF),n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
Parent1=DNA[1:(nrow(DNAF)/2)] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[(nrow(DNAF)/2):(nrow(DNAF)-1)]
NewParentsF=hybridize(Parent, Parent, n=60, pop="NewParentsF")
DNA
DNA@pop
DNA=read.structure("SubsetWild4stru.stru", n.ind=nrow(DNAW),n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
DNA
DNA@pop
Parent1=DNA[1:(nrow(DNAW)/2)] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[(nrow(DNAW)/2):(nrow(DNAW)-1)]
Parent=DNA
DNA=read.structure("SubsetWild4stru.stru", n.ind=nrow(DNAW),n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
Parent1=DNA[1:(nrow(DNAW)/2)] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[(nrow(DNAW)/2):(nrow(DNAW)-1)]
Parent=DNA
NewParentsW=hybridize(Parent, Parent, n=60, pop="NewParentsW")
NewParents
NewParents@pop
NewParentsW@pop
DNA=read.structure("SubsetFF4stru.stru", n.ind=nrow(DNAF)-1,n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
Parent1=DNA[1:(nrow(DNAF)/2)] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[(nrow(DNAF)/2):(nrow(DNAF)-1)]
Parent=DNA
NewParentsF=hybridize(Parent, Parent, n=60, pop="NewParentsF")
NewParentsF
DNASim = repool(c(NewParentsW,NewParentsF))
Hybrids=hybridize(NewParentsW, NewParentsF, n=60, pop="Hybrids")
DNAHyb=repool(c(NewParentsW,NewParentsF,Hybrids))
X = tab(DNAHyb, NA.method="zero") #tab() retrieves a matrix of allele data and NA.methods="zero" sets NA's (missing) to 0.
pca1 <- dudi.pca(X,scannf=FALSE,scale=FALSE) #this makes an object "pca1" that has the results of your PCA.
temp <- as.integer(pop(DNAHyb)) #makes a temporary object to be used for myCol and myPch (below) that convert your populations to integers
myCol <- transp(c("black","firebrick1","darkgreen","dodgerblue1","purple"),.8)[temp]
myPch <- c(21,22,21,21,23)[temp] #Sets points to each population given in DNA
plot(pca1$li, col="black", cex=2, pch=myPch, bg=myCol) #
DNA = read.table("V:\\3730Data\\377STRs\\Wildlife\\R Scripts\\R Stuff\\stackedBarggplot2\\Newfoundland_Q2.txt", sep="\t", header=T)
IDs = DNA[DNA$Wild >0.98,]
IDs = IDs[,1]
IDs = droplevels(IDs)
DNA = read.table("4stru_NewfoundlandRF.stru", sep="\t", header=T)
subset = which(is.element(DNA$X, IDs))
DNAW = DNA[subset,]
Scrambled = DNAW[sample(nrow(DNAW), nrow(DNAW), replace=FALSE),]
write.table(Scrambled, file="SubsetWild4stru.stru", quote=F,sep="\t", row.names=F)
DNA = read.table("V:\\3730Data\\377STRs\\Wildlife\\R Scripts\\R Stuff\\stackedBarggplot2\\Newfoundland_Q2.txt", sep="\t", header=T)
IDs = DNA[DNA$FurFarm >0.98,]
IDs = IDs[,1]
IDs = droplevels(IDs)
DNA = read.table("4stru_NewfoundlandRF.stru", sep="\t", header=T)
subset = which(is.element(DNA$X, IDs))
DNAF = DNA[subset,]
Scrambled = DNAF[sample(nrow(DNAF), nrow(DNAF), replace=FALSE),]
write.table(Scrambled, file="SubsetFF4stru.stru", quote=F,sep="\t", row.names=F)
#Since R is stupid, I'm just going to fix the stupid headers in Notepad...
#Took headers from 4stru_NewfoundlandRF.stru and pasted it on. Should figure a way to fix this idiot problem of adding X to colnames, which means read.structure can't import them.
DNA=read.structure("SubsetWild4stru.stru", n.ind=nrow(DNAW),n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
Parent1=DNA[1:(nrow(DNAW)/2)] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[(nrow(DNAW)/2):(nrow(DNAW)-1)]
Parent=DNA
NewParentsW=hybridize(Parent1, Parent2, n=60, pop="NewParentsW")
DNA=read.structure("SubsetFF4stru.stru", n.ind=nrow(DNAF)-1,n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
Parent1=DNA[1:(nrow(DNAF)/2)] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[(nrow(DNAF)/2):(nrow(DNAF)-1)]
Parent=DNA
NewParentsF=hybridize(Parent1, Parent2, n=60, pop="NewParentsF")
Hybrids=hybridize(NewParentsW, NewParentsF, n=60, pop="Hybrids")
DNAHyb=repool(c(NewParentsW,NewParentsF,Hybrids))
X = tab(DNAHyb, NA.method="zero") #tab() retrieves a matrix of allele data and NA.methods="zero" sets NA's (missing) to 0.
pca1 <- dudi.pca(X,scannf=FALSE,scale=FALSE) #this makes an object "pca1" that has the results of your PCA.
temp <- as.integer(pop(DNAHyb)) #makes a temporary object to be used for myCol and myPch (below) that convert your populations to integers
myCol <- transp(c("black","firebrick1","darkgreen","dodgerblue1","purple"),.8)[temp]
myPch <- c(21,22,21,21,23)[temp] #Sets points to each population given in DNA
plot(pca1$li, col="black", cex=2, pch=myPch, bg=myCol)
temp
DNAHyb@pop
DNAHyb=repool(c(NewParentsW,NewParentsF,Hybrids))
X = tab(DNAHyb, NA.method="zero") #tab() retrieves a matrix of allele data and NA.methods="zero" sets NA's (missing) to 0.
pca1 <- dudi.pca(X,scannf=FALSE,scale=FALSE) #this makes an object "pca1" that has the results of your PCA.
temp <- as.integer(pop(DNAHyb)) #makes a temporary object to be used for myCol and myPch (below) that convert your populations to integers
myCol <- transp(c("goldenrod2","dodgerblue","darkgreen"),.8)[temp]
myPch <- c(21,22,23)[temp] #Sets points to each population given in DNA
plot(pca1$li, col="black", cex=2, pch=myPch, bg=myCol)
legend(3,0,pch=c(22,21,21,21,23), col="black", pt.bg=transp(c("goldenrod2","dodgerblue","darkgreen"),0.8), leg=c("Wild","FurFarm","Hybrids"),pt.cex=2)
temp
legend(3,0,pch=c(21,22,23), col="black", pt.bg=transp(c("goldenrod2","dodgerblue","darkgreen"),0.8), leg=c("Wild","FurFarm","Hybrids"),pt.cex=2)
legend(-4,3,pch=c(21,22,23), col="black", pt.bg=transp(c("goldenrod2","dodgerblue","darkgreen"),0.8), leg=c("Wild","FurFarm","Hybrids"),pt.cex=2)
legend(-4,4,pch=c(21,22,23), col="black", pt.bg=transp(c("goldenrod2","dodgerblue","darkgreen"),0.8), leg=c("Wild","FurFarm","Hybrids"),pt.cex=2)
legend(-4,3.5,pch=c(21,22,23), col="black", pt.bg=transp(c("goldenrod2","dodgerblue","darkgreen"),0.8), leg=c("Wild","FurFarm","Hybrids"),pt.cex=2)
pca1 <- dudi.pca(X,scannf=FALSE,scale=FALSE) #this makes an object "pca1" that has the results of your PCA.
temp <- as.integer(pop(DNAHyb)) #makes a temporary object to be used for myCol and myPch (below) that convert your populations to integers
myCol <- transp(c("goldenrod2","dodgerblue","darkgreen"),.8)[temp]
myPch <- c(21,22,23)[temp] #Sets points to each population given in DNA
plot(pca1$li, col="black", cex=2, pch=myPch, bg=myCol)
legend(-4,3.5,pch=c(21,22,23), col="black", pt.bg=transp(c("goldenrod2","dodgerblue","darkgreen"),0.8), leg=c("Wild","FurFarm","Hybrids"),pt.cex=2)
DNA = read.table("V:\\3730Data\\377STRs\\Wildlife\\R Scripts\\R Stuff\\stackedBarggplot2\\Newfoundland_Q2.txt", sep="\t", header=T)
IDs = DNA[DNA$Wild >0.98,]
IDs = IDs[,1]
IDs = droplevels(IDs)
DNA = read.table("4stru_NewfoundlandRF.stru", sep="\t", header=T)
subset = which(is.element(DNA$X, IDs))
DNAW = DNA[subset,]
Scrambled = DNAW[sample(nrow(DNAW), nrow(DNAW), replace=FALSE),]
write.table(Scrambled, file="SubsetWild4stru.stru", quote=F,sep="\t", row.names=F)
DNA = read.table("V:\\3730Data\\377STRs\\Wildlife\\R Scripts\\R Stuff\\stackedBarggplot2\\Newfoundland_Q2.txt", sep="\t", header=T)
IDs = DNA[DNA$FurFarm >0.98,]
IDs = IDs[,1]
IDs = droplevels(IDs)
DNA = read.table("4stru_NewfoundlandRF.stru", sep="\t", header=T)
subset = which(is.element(DNA$X, IDs))
DNAF = DNA[subset,]
Scrambled = DNAF[sample(nrow(DNAF), nrow(DNAF), replace=FALSE),]
write.table(Scrambled, file="SubsetFF4stru.stru", quote=F,sep="\t", row.names=F)
DNA=read.structure("SubsetWild4stru.stru", n.ind=nrow(DNAW),n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
Parent1=DNA[1:(nrow(DNAW)/2)] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[(nrow(DNAW)/2):(nrow(DNAW)-1)]
Parent=DNA
NewParentsW=hybridize(Parent1, Parent2, n=60, pop="NewParentsW")
DNA=read.structure("SubsetFF4stru.stru", n.ind=nrow(DNAF)-1,n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
Parent1=DNA[1:(nrow(DNAF)/2)] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[(nrow(DNAF)/2):(nrow(DNAF)-1)]
Parent=DNA
NewParentsF=hybridize(Parent1, Parent2, n=60, pop="NewParentsF")
Hybrids=hybridize(NewParentsW, NewParentsF, n=60, pop="Hybrids")
DNAHyb=repool(c(NewParentsW,NewParentsF,Hybrids))
X = tab(DNAHyb, NA.method="zero") #tab() retrieves a matrix of allele data and NA.methods="zero" sets NA's (missing) to 0.
pca1 <- dudi.pca(X,scannf=FALSE,scale=FALSE) #this makes an object "pca1" that has the results of your PCA.
temp <- as.integer(pop(DNAHyb)) #makes a temporary object to be used for myCol and myPch (below) that convert your populations to integers
myCol <- transp(c("goldenrod2","dodgerblue","darkgreen"),.8)[temp]
myPch <- c(21,22,23)[temp] #Sets points to each population given in DNA
plot(pca1$li, col="black", cex=2, pch=myPch, bg=myCol)
legend(-4,3.5,pch=c(21,22,23), col="black", pt.bg=transp(c("goldenrod2","dodgerblue","darkgreen"),0.8), leg=c("Wild","FurFarm","Hybrids"),pt.cex=2)
legend("bottomright",pch=c(21,22,23), col="black", pt.bg=transp(c("goldenrod2","dodgerblue","darkgreen"),0.8), leg=c("Wild","FurFarm","Hybrids"),pt.cex=2)
setwd("V:/3730Data/377STRs/Wildlife/R Scripts/R Stuff/adegenet")
mycol=transp(c("black","firebrick1","dodgerblue1","darkgreen","yellow"), 0.4)
DNA=read.structure("4stru_NewfoundlandRF.stru", n.ind=147,n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
temp1=seppop(DNA)
Wild=temp1$SouthWild #chose Southwild because all individuals unambiguously assign to the "wild" group in all structure analyses.
FF=temp1$FurFarm
Hyb=hybridize(Wild, FF, n=30, pop="Hybrid")
DNAHyb=repool(c(DNA,Hyb))
X = tab(DNAHyb, NA.method="zero") #tab() retrieves a matrix of allele data and NA.methods="zero" sets NA's (missing) to 0.
pca1 <- dudi.pca(X,scannf=FALSE,scale=FALSE) #this makes an object "pca1" that has the results of your PCA.
temp <- as.integer(pop(DNAHyb)) #makes a temporary object to be used for myCol and myPch (below) that convert your populations to integers
myCol <- transp(c("black","firebrick1","darkgreen","dodgerblue1","purple"),.8)[temp]
myPch <- c(21,22,21,21,23)[temp] #Sets points to each population given in DNA
plot(pca1$li, col="black", cex=2, pch=myPch, bg=myCol) # $li refers to the principal components, so that's what we're plotting here
#add.scatter.eig(pca1$eig[1:15],10,2,1,inset=c(0.2,0.75),ratio=0.2) #adds the distribution of the first 20 eigenvalues in a barchart as an insert
#legend(3,0,pch=c(22,21,21,21,23), col="black", pt.bg=transp(c("firebrick1","dodgerblue1","black","darkgreen","purple"),0.8), leg=c("Fur Farm","North","Central","South","Hybrids"),pt.cex=2)
pca1 <- dudi.pca(X,scannf=FALSE,scale=FALSE) #this makes an object "pca1" that has the results of your PCA.
temp <- as.integer(pop(DNAHyb)) #makes a temporary object to be used for myCol and myPch (below) that convert your populations to integers
myCol <- transp(c("goldenrod2","dodgerblue","darkgreen"),.8)[temp]
myPch <- c(21,22,23)[temp] #Sets points to each population given in DNA
plot(pca1$li, col="black", cex=2, pch=myPch, bg=myCol)
legend("bottomright",pch=c(21,22,23), col="black", pt.bg=transp(c("goldenrod2","dodgerblue","darkgreen"),0.8), leg=c("Wild","FurFarm","Hybrids"),pt.cex=2)
DNAHyb=repool(c(NewParentsW,NewParentsF,Hybrids))
X = tab(DNAHyb, NA.method="zero") #tab() retrieves a matrix of allele data and NA.methods="zero" sets NA's (missing) to 0.
pca1 <- dudi.pca(X,scannf=FALSE,scale=FALSE) #this makes an object "pca1" that has the results of your PCA.
temp <- as.integer(pop(DNAHyb)) #makes a temporary object to be used for myCol and myPch (below) that convert your populations to integers
myCol <- transp(c("goldenrod2","dodgerblue","darkgreen"),.8)[temp]
myPch <- c(21,22,23)[temp] #Sets points to each population given in DNA
plot(pca1$li, col="black", cex=2, pch=myPch, bg=myCol)
legend("bottomright",pch=c(21,22,23), col="black", pt.bg=transp(c("goldenrod2","dodgerblue","darkgreen"),0.8), leg=c("Wild","FurFarm","Hybrids"),pt.cex=2)
############################################################
add.scatter.eig(pca1$eig[1:15],10,2,1,inset=c(0.2,0.75),ratio=0.2) #adds the distribution of the first 20 eigenvalues in a barchart as an insert
setwd("V:/3730Data/377STRs/Wildlife/R Scripts/R Stuff/adegenet")
mycol=transp(c("black","firebrick1","dodgerblue1","darkgreen","yellow"), 0.4)
DNA = read.table("V:\\3730Data\\377STRs\\Wildlife\\R Scripts\\R Stuff\\stackedBarggplot2\\Newfoundland_Q2.txt", sep="\t", header=T)
IDs = DNA[DNA$Wild >0.98,]
IDs = IDs[,1]
IDs = droplevels(IDs)
DNA = read.table("4stru_NewfoundlandRF.stru", sep="\t", header=T)
subset = which(is.element(DNA$X, IDs))
DNAW = DNA[subset,]
Scrambled = DNAW[sample(nrow(DNAW), nrow(DNAW), replace=FALSE),]
write.table(Scrambled, file="SubsetWild4stru.stru", quote=F,sep="\t", row.names=F)
DNA = read.table("V:\\3730Data\\377STRs\\Wildlife\\R Scripts\\R Stuff\\stackedBarggplot2\\Newfoundland_Q2.txt", sep="\t", header=T)
IDs = DNA[DNA$FurFarm >0.98,]
IDs = IDs[,1]
IDs = droplevels(IDs)
DNA = read.table("4stru_NewfoundlandRF.stru", sep="\t", header=T)
subset = which(is.element(DNA$X, IDs))
DNAF = DNA[subset,]
Scrambled = DNAF[sample(nrow(DNAF), nrow(DNAF), replace=FALSE),]
write.table(Scrambled, file="SubsetFF4stru.stru", quote=F,sep="\t", row.names=F)
DNA=read.structure("SubsetWild4stru.stru", n.ind=nrow(DNAW),n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
Parent1=DNA[1:(nrow(DNAW)/2)] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[(nrow(DNAW)/2):(nrow(DNAW)-1)]
Parent=DNA
NewParentsW=hybridize(Parent1, Parent2, n=60, pop="NewParentsW")
DNA=read.structure("SubsetFF4stru.stru", n.ind=nrow(DNAF)-1,n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
Parent1=DNA[1:(nrow(DNAF)/2)] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[(nrow(DNAF)/2):(nrow(DNAF)-1)]
Parent=DNA
NewParentsF=hybridize(Parent1, Parent2, n=60, pop="NewParentsF")
Hybrids=hybridize(NewParentsW, NewParentsF, n=60, pop="Hybrids")
DNAHyb=repool(c(NewParentsW,NewParentsF,Hybrids))
X = tab(DNAHyb, NA.method="zero") #tab() retrieves a matrix of allele data and NA.methods="zero" sets NA's (missing) to 0.
pca1 <- dudi.pca(X,scannf=FALSE,scale=FALSE) #this makes an object "pca1" that has the results of your PCA.
temp <- as.integer(pop(DNAHyb)) #makes a temporary object to be used for myCol and myPch (below) that convert your populations to integers
myCol <- transp(c("goldenrod2","dodgerblue","darkgreen"),.8)[temp]
myPch <- c(21,22,23)[temp] #Sets points to each population given in DNA
plot(pca1$li, col="black", cex=2, pch=myPch, bg=myCol)
legend("bottomright", pch=c(21,22,23), col="black", pt.bg=transp(c("goldenrod2","dodgerblue","darkgreen"),0.8), leg=c("Wild","FurFarm","Hybrids"),pt.cex=2)
DNA=read.structure("SubsetWild4stru.stru", n.ind=nrow(DNAW),n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
Parent1=DNA[1:(nrow(DNAW)/2)] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[(nrow(DNAW)/2):(nrow(DNAW)-1)]
Parent=DNA
NewParentsW=hybridize(Parent, Parent, n=600, pop="NewParentsW")
DNA=read.structure("SubsetFF4stru.stru", n.ind=nrow(DNAF)-1,n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
Parent1=DNA[1:(nrow(DNAF)/2)] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[(nrow(DNAF)/2):(nrow(DNAF)-1)]
Parent=DNA
NewParentsF=hybridize(Parent, Parent, n=600, pop="NewParentsF")
Hybrids=hybridize(NewParentsW, NewParentsF, n=600, pop="Hybrids")
DNAHyb=repool(c(NewParentsW,NewParentsF,Hybrids))
X = tab(DNAHyb, NA.method="zero") #tab() retrieves a matrix of allele data and NA.methods="zero" sets NA's (missing) to 0.
pca1 <- dudi.pca(X,scannf=FALSE,scale=FALSE) #this makes an object "pca1" that has the results of your PCA.
temp <- as.integer(pop(DNAHyb)) #makes a temporary object to be used for myCol and myPch (below) that convert your populations to integers
myCol <- transp(c("goldenrod2","dodgerblue","darkgreen"),.8)[temp]
myPch <- c(21,22,23)[temp] #Sets points to each population given in DNA
plot(pca1$li, col="black", cex=2, pch=myPch, bg=myCol)
legend("bottomright", pch=c(21,22,23), col="black", pt.bg=transp(c("goldenrod2","dodgerblue","darkgreen"),0.8), leg=c("Wild","FurFarm","Hybrids"),pt.cex=2)
NewParentsF=hybridize(Parent1, Parent2, n=600, pop="NewParentsF")
add.scatter.eig(pca1$eig[1:15],10,2,1,inset=c(0.2,0.75),ratio=0.2) #adds the distribution of the first 20 eigenvalues in a barchart as an insert
DNA=read.structure("SubsetWild4stru.stru", n.ind=nrow(DNAW),n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
Parent1=DNA[1:(nrow(DNAW)/2)] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[(nrow(DNAW)/2):(nrow(DNAW)-1)]
Parent=DNA
NewParentsW=hybridize(Parent1, Parent2, n=60, pop="NewParentsW")
DNA=read.structure("SubsetFF4stru.stru", n.ind=nrow(DNAF)-1,n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
Parent1=DNA[1:(nrow(DNAF)/2)] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[(nrow(DNAF)/2):(nrow(DNAF)-1)]
Parent=DNA
NewParentsF=hybridize(Parent1, Parent2, n=60, pop="NewParentsF")
Hybrids=hybridize(NewParentsW, NewParentsF, n=60, pop="Hybrids")
DNAHyb=repool(c(NewParentsW,NewParentsF,Hybrids))
DNA=read.structure("SubsetFF4stru.stru", n.ind=nrow(DNAF)-1,n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
Parent1=DNA[1:(nrow(DNAF)/2)] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[(nrow(DNAF)/2):(nrow(DNAF)-1)]
NewParentsF=hybridize(Parent1, Parent2, n=60, pop="NewParentsF")
DNA=read.structure("SubsetFF4stru.stru", n.ind=nrow(DNAF)-2,n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
Parent1=DNA[1:(nrow(DNAF)/2)] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[(nrow(DNAF)/2):(nrow(DNAF)-1)]
Parent=DNA
NewParentsF=hybridize(Parent1, Parent2, n=60, pop="NewParentsF")
DNA=read.structure("SubsetWild4stru.stru", n.ind=nrow(DNAW),n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
Parent1=DNA[1:(nrow(DNAW)/2)] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[(nrow(DNAW)/2):(nrow(DNAW)-1)]
Parent=DNA
NewParentsW=hybridize(Parent1, Parent2, n=60, pop="NewParentsW")
DNA=read.structure("SubsetFF4stru.stru", n.ind=nrow(DNAF)-1,n.loc=21,onerowperind=T,col.lab=1,col.pop=2,row.marknames=1) #This is 4stru.txt with the file handle changed (structure formatted txt file)
Parent1=DNA[1:(nrow(DNAF)/2)] #These are scrambled by the sample command above, so first 30 and second 30 are random
Parent2=DNA[(nrow(DNAF)/2):(nrow(DNAF)-1)]
Parent=DNA
NewParentsF=hybridize(Parent1, Parent2, n=60, pop="NewParentsF")
Hybrids=hybridize(NewParentsW, NewParentsF, n=60, pop="Hybrids")
DNAHyb=repool(c(NewParentsW,NewParentsF,Hybrids))
