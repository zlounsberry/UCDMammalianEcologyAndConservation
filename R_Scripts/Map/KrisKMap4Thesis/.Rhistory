utils:::menuInstallPkgs()
library(RMark)
library(pegas)
install.packages('pegas')
install.packages(c('pegas','dplyr'))
library(pegas)
wmap = readOGR(dsn="V:/3730Data/377STRs/Wildlife/R Scripts/R Stuff/Map/ShapeFiles4NewProj/ne_110m_land.shp", layer="ne_110m_land") #Land layer
setwd("V:\\3730Data\\377STRs\\Wildlife\\R Scripts\\R Stuff\\Map\\KrisKMap4Thesis")
library(maptools)
library(gpclib)
library(maps)
library(mapdata)
library(sp)
library(classInt)
library(png)
library(raster)
library(rgdal)
library(fifer)
library(ggplot2)
wmap = readOGR(dsn="V:/3730Data/377STRs/Wildlife/R Scripts/R Stuff/Map/ShapeFiles4NewProj/ne_110m_land.shp", layer="ne_110m_land") #Land layer
wmap_df <- fortify(wmap) #Still not sure what fortify does, it's a ggplot thing and I have to look into it...
wmap_df
Hexes=readOGR(dsn="V:\\3730Data\\377STRs\\Wildlife\\R Scripts\\R Stuff\\Map\\Bears - Jamie Sherman\\Shape files 5-6-13\\Hex.shp", layer="Hex")
Hexes=spTransform(Hexes, CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
Hexes_df=fortify(Hexes)
Points_df=fortify(Points)
Points=readOGR(dsn="V:\\3730Data\\377STRs\\Wildlife\\R Scripts\\R Stuff\\Map\\Bears - Jamie Sherman\\Shape files 5-6-13\\points.shp", layer="points")
Points=spTransform(Points, CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
Points_df=fortify(Points)
theme_opts <- list(theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
plot.background = element_rect(fill="white"),
panel.border = element_blank(),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.title = element_text(size=42)))
bbox = readOGR("V:/3730Data/377STRs/Wildlife/R Scripts/R Stuff/Map/ShapeFiles4NewProj/ne_110m_wgs84_bounding_box.shp", layer="ne_110m_wgs84_bounding_box") #bounding box, this is kinda the earth shape
bbox_df<- fortify(bbox)
head(
theme_opts <- list(theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
plot.background = element_rect(fill="white"),
panel.border = element_blank(),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.tit
head(bbox_df)
Box=as.data.frame(lon=c(-121.3167,-121.3167,-119.9617,-119.9617),lat=c(35.78504,34.94611,34.94611,35.78504))
Box=data.frame(lon=c(-121.3167,-121.3167,-119.9617,-119.9617),lat=c(35.78504,34.94611,34.94611,35.78504))
Box
ggplot(Box, aes(lon,lat, group=NULL))
Points
Points@coords[,1                ]
ggplot(Box, aes(lon,lat, group=NULL)) +
theme_opts + #Apply our themes from above
geom_point(data=Points, aes(Points@coords[,1],Points@coords[,2], group=NULL, size=15),alpha = .8, colour="red")
mapdata<-data.frame(Points)
names(mapdata)[names(mapdata)=="mx"] = "x"
names(mapdata)[names(mapdata)=="my"] = "y"
NewPoints = fortify(mapdata)
ggplot(Box, aes(lon,lat, group=NULL)) +
theme_opts + #Apply our themes from above
geom_point(data=NewPoints, aes(x,y, group=NULL, size=15),alpha = .8, colour="red")
NewPoints
ggplot(Box, aes(lon,lat, group=NULL)) +
theme_opts + #Apply our themes from above
geom_point(data=NewPoints, aes(coords.x1,coords.x1, group=NULL, size=15),alpha = .8, colour="red")
NewPoints
ggplot(Box, aes(lon,lat, group=NULL)) +
theme_opts + #Apply our themes from above
geom_point(data=NewPoints, aes(coords.x1,coords.x2, group=NULL, size=15),alpha = .8, colour="red")
Hexes_df
head(Hexes_df)
ggplot(Box, aes(lon,lat, group=NULL)) +
theme_opts + #Apply our themes from above
geom_point(data=NewPoints, aes(coords.x1,coords.x2, group=NULL, size=15),alpha = .8, colour="red") +
geom_path(Hexes_df, aes(long,lat,group=NULL))
grat = readOGR("V:/3730Data/377STRs/Wildlife/R Scripts/R Stuff/Map/ShapeFiles4NewProj/ne_110m_graticules_30.shp", layer="ne_110m_graticules_30") #not sure what this is either, it was part of the tutorial
grat_df <- fortify(grat)
grat_wintri = spTransform(grat, CRS("+proj=wintri +lon_0=0 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m +no_defs"))
grat_wintri_df <- fortify(grat_wintri)
grat_df
head(grat_df)
head(Hexes_df)
ggplot(Box, aes(lon,lat, group=NULL)) +
theme_opts + #Apply our themes from above
geom_point(data=NewPoints, aes(coords.x1,coords.x2, group=NULL, size=15),alpha = .8, colour="red") +
geom_path(Hexes_df, aes(long,lat,group=group, fill=F))
head(grat_df)
class(grat_df)
ggplot(Box, aes(lon,lat, group=NULL)) +
theme_opts + #Apply our themes from above
geom_point(data=NewPoints, aes(coords.x1,coords.x2, group=NULL, size=15),alpha = .8, colour="red") +
geom_path(data=Hexes_df, aes(long,lat,group=group, fill=F))
#Borrowed this bit from https://www.packtpub.com/books/content/data-around-us
str(map_data <- map('state', plot = FALSE, fill = TRUE))
states <- sapply(strsplit(map_data$names, ':'), '[[', 1)
us <- map2SpatialPolygons(map_data, IDs = states,proj4string = CRS("+proj=longlat +datum=WGS84"))
plot(us)
leaflet(us) %>% #Make a blank leaflet map
setView(-118.5, 38, 5) %>% #zoom it in on CA
addTiles('http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',
'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community') %>%
addPolygons(color="gray50", opacity=1) %>%
addPolygons(lng=c(-121.3167,-121.3167,-119.9617,-119.9617),lat=c(35.78504,34.94611,34.94611,35.78504), opacity=1, color="white", fill=F, weight=5) #%>%
#addCircles(Points@coords[,1],Points@coords[,2], color="red")
leaflet(us) %>% #Make a blank leaflet map
setView(-118.5, 38, 5) %>% #zoom it in on CA
addTiles('http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',
'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community') %>%
addPolygons(color="gray50", opacity=1) %>%
addPolygons(lng=c(-121.3167,-121.3167,-119.9617,-119.9617),lat=c(35.78504,34.94611,34.94611,35.78504), opacity=1, color="white", fill=F, weight=5) #%>%
#addCircles(Points@coords[,1],Points@coords[,2], color="red")
library(shiny)
library(leaflet)
library(spatstat)
library(raster)
library(rgdal)
library(fifer)
library(maps)
library(maptools)
library(ggplot2)
leaflet(us) %>% #Make a blank leaflet map
setView(-118.5, 38, 5) %>% #zoom it in on CA
addTiles('http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',
'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community') %>%
addPolygons(color="gray50", opacity=1) %>%
addPolygons(lng=c(-121.3167,-121.3167,-119.9617,-119.9617),lat=c(35.78504,34.94611,34.94611,35.78504), opacity=1, color="white", fill=F, weight=5) #%>%
#addCircles(Points@coords[,1],Points@coords[,2], color="red")
ggplot(Box, aes(lon,lat, group=NULL)) +
theme_opts + #Apply our themes from above
geom_point(data=NewPoints, aes(coords.x1,coords.x2, group=NULL, size=15),alpha = .8, colour="red") +
geom_path(data=Hexes_df, aes(long,lat,group=group, fill=F))
#' Add or remove a scale bar
#'
#' Uses Leaflet's built-in
#' \href{http://leafletjs.com/reference.html#control-scale}{scale bar}
#' feature to add a scale bar.
#'
#' @param map the map to add the scale bar to
#' @param position position of control: 'topleft', 'topright', 'bottomleft', or
#'   'bottomright'
#' @param options a list of additional options, intended to be provided by
#'   a call to \code{scaleBarOptions}
#'
#' @examples
#' \donttest{
#' leaflet() %>%
#'   addTiles() %>%
#'   addScaleBar()
#' }
#'
#' @export
addScaleBar = function(map,
position = c('topright', 'bottomright', 'bottomleft', 'topleft'),
options = scaleBarOptions()) {
options = c(options, list(position = match.arg(position)))
invokeMethod(map, getMapData(map), 'addScaleBar', options)
}
#' @rdname addScaleBar
#' @param maxWidth maximum width of the control in pixels (default 100)
#' @param metric if \code{TRUE} (the default), show a scale bar in metric units
#' (m/km)
#' @param imperial if \code{TRUE} (the default), show a scale bar in imperial
#' units (ft/mi)
#' @param updateWhenIdle if \code{FALSE} (the default), the scale bar is always
#' up-to-date (updated on \code{move}). If \code{TRUE}, the control is updated
#' on \code{moveend}.
#' @export
scaleBarOptions = function(maxWidth = 100, metric = TRUE, imperial = TRUE,
updateWhenIdle = TRUE) {
list(maxWidth=maxWidth, metric=metric, imperial=imperial,
updateWhenIdle=updateWhenIdle)
}
#' @rdname addScaleBar
#' @export
removeScaleBar = function(map) {
invokeMethod(map, NULL, 'removeScaleBar')
}
leaflet(us) %>% #Make a blank leaflet map
setView(-118.5, 38, 5) %>% #zoom it in on CA
addTiles('http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',
'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community') %>%
addPolygons(color="gray50", opacity=1) %>%
addPolygons(lng=c(-121.3167,-121.3167,-119.9617,-119.9617),lat=c(35.78504,34.94611,34.94611,35.78504), opacity=1, color="white", fill=F, weight=5) #%>%
addScaleBar()
leaflet(us) %>% #Make a blank leaflet map
setView(-118.5, 38, 5) %>% #zoom it in on CA
addTiles('http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',
'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community') %>%
addPolygons(color="gray50", opacity=1) %>%
addPolygons(lng=c(-121.3167,-121.3167,-119.9617,-119.9617),lat=c(35.78504,34.94611,34.94611,35.78504), opacity=1, color="white", fill=F, weight=5) #%>%
addScaleBar(us)
leaflet(us) %>% #Make a blank leaflet map
setView(-118.5, 38, 5) %>% #zoom it in on CA
addTiles('http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',
'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community') %>%
addPolygons(color="gray50", opacity=1) %>%
addPolygons(lng=c(-121.3167,-121.3167,-119.9617,-119.9617),lat=c(35.78504,34.94611,34.94611,35.78504), opacity=1, color="white", fill=F, weight=5) %>%
addScaleBar()
leaflet(us) %>% #Make a blank leaflet map
setView(-118.5, 38, 5) %>% #zoom it in on CA
addTiles('http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',
'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community') %>%
addPolygons(color="gray50", opacity=1) %>%
addPolygons(lng=c(-121.3167,-121.3167,-119.9617,-119.9617),lat=c(35.78504,34.94611,34.94611,35.78504), opacity=1, color="white", fill=F, weight=5) %>%
addScaleBar(us)
leaflet(us) %>% #Make a blank leaflet map
setView(-118.5, 38, 5) %>% #zoom it in on CA
addTiles('http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',
'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community') %>%
addPolygons(color="gray50", opacity=1) %>%
addPolygons(lng=c(-121.3167,-121.3167,-119.9617,-119.9617),lat=c(35.78504,34.94611,34.94611,35.78504), opacity=1, color="white", fill=F, weight=5) %>%
addScaleBar(us)
leaflet(us) %>% #Make a blank leaflet map
setView(-118.5, 38, 5) %>% #zoom it in on CA
addTiles('http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',
'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community') %>%
addPolygons(color="gray50", opacity=1) %>%
addPolygons(lng=c(-121.3167,-121.3167,-119.9617,-119.9617),lat=c(35.78504,34.94611,34.94611,35.78504), opacity=1, color="white", fill=F, weight=5) %>%
addScaleBar()
leaflet(us) %>% #Make a blank leaflet map
setView(-118.5, 38, 5) %>% #zoom it in on CA
addTiles('http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',
'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community') %>%
addPolygons(color="gray50", opacity=1) %>%
addPolygons(lng=c(-121.3167,-121.3167,-119.9617,-119.9617),lat=c(35.78504,34.94611,34.94611,35.78504), opacity=1, color="white", fill=F, weight=5) %>%
addScaleBar(position='bottomright')
Points
Hexes
