'&copy; <a href="http://www.opencyclemap.org">OpenCycleMap</a>, &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>') %>%
addCircles(Dens$longRange, Dens$latRange, weight = ~toVary, radius=40, color="red", stroke = TRUE, fillOpacity = 0.9) %>%
addRasterImage(surface, colors = col, project=F)
FakeCluster
AgeClass="CALF"
AgeClassColumn=which(colnames(FakeCluster)==AgeClass)
toVary=FakeCluster[,AgeClassColumn]
longRange = FakeCluster$X
latRange = FakeCluster$Y
Dens = data.frame(longRange,latRange,toVary, row.names=NULL)
Dens = Dens[complete.cases(Dens),]
Dens$toVary=Dens$toVary - min(Dens$toVary)
Dens$toVary=Dens$toVary/(max(Dens$toVary))
Dens$toVary=Dens$toVary*10
owin(c(-179,179),c(-89,89))
xWin = owin(c(-123.2,-122.3),c(38.9,39.6))
pts <- as.ppp(Dens,W=xWin)
pt.dens = density(pts,weights=pts$marks, sigma=0.1, eps=0.005)
surface = raster(pt.dens)
crs(surface) = sp::CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
surface=projectRasterForLeaflet(surface)
col=colorRampPalette(c("transparent", "yellow"), alpha=T)( 90 )
leaflet(Dens) %>%
setView(-118.5, 38, 5) %>%
addTiles('http://{s}.tile.thunderforest.com/transport-dark/{z}/{x}/{y}.png',
'&copy; <a href="http://www.opencyclemap.org">OpenCycleMap</a>, &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>') %>%
addCircles(Dens$longRange, Dens$latRange, weight = ~toVary, radius=40, color="red", stroke = TRUE, fillOpacity = 0.9) %>%
addRasterImage(surface, colors = col, project=F)
FakeCluster=read.csv("./ElkTest.csv", header=T)
AgeClass="COW"
AgeClassColumn=which(colnames(FakeCluster)==AgeClass)
toVary=FakeCluster[,AgeClassColumn]
longRange = FakeCluster$X
latRange = FakeCluster$Y
Dens = data.frame(longRange,latRange,toVary, row.names=NULL)
Dens = Dens[complete.cases(Dens),]
Dens$toVary=Dens$toVary - min(Dens$toVary)
Dens$toVary=Dens$toVary/(max(Dens$toVary))
Dens$toVary=Dens$toVary*10
xWin = owin(c(-123.2,-122.3),c(38.9,39.6))
pts <- as.ppp(Dens,W=xWin)
pt.dens = density(pts,weights=pts$marks, sigma=0.1, eps=0.005)
surface = raster(pt.dens)
crs(surface) = sp::CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
surface1=projectRasterForLeaflet(surface)
col1=colorRampPalette(c("transparent", "yellow"), alpha=T)( 30 )
AgeClass="CALF"
AgeClassColumn=which(colnames(FakeCluster)==AgeClass)
toVary=FakeCluster[,AgeClassColumn]
longRange = FakeCluster$X
latRange = FakeCluster$Y
Dens = data.frame(longRange,latRange,toVary, row.names=NULL)
Dens = Dens[complete.cases(Dens),]
Dens$toVary=Dens$toVary - min(Dens$toVary)
Dens$toVary=Dens$toVary/(max(Dens$toVary))
Dens$toVary=Dens$toVary*10
xWin = owin(c(-123.2,-122.3),c(38.9,39.6))
pts <- as.ppp(Dens,W=xWin)
pt.dens = density(pts,weights=pts$marks, sigma=0.1, eps=0.005)
surface = raster(pt.dens)
crs(surface) = sp::CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
surface2=projectRasterForLeaflet(surface)
col2=colorRampPalette(c("transparent", "blue"), alpha=T)( 30 )
AgeClass="BULL"
AgeClassColumn=which(colnames(FakeCluster)==AgeClass)
toVary=FakeCluster[,AgeClassColumn]
longRange = FakeCluster$X
latRange = FakeCluster$Y
Dens = data.frame(longRange,latRange,toVary, row.names=NULL)
Dens = Dens[complete.cases(Dens),]
Dens$toVary=Dens$toVary - min(Dens$toVary)
Dens$toVary=Dens$toVary/(max(Dens$toVary))
Dens$toVary=Dens$toVary*10
xWin = owin(c(-123.2,-122.3),c(38.9,39.6))
pts <- as.ppp(Dens,W=xWin)
pt.dens = density(pts,weights=pts$marks, sigma=0.1, eps=0.005)
surface = raster(pt.dens)
crs(surface) = sp::CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
surface3=projectRasterForLeaflet(surface)
col3=colorRampPalette(c("transparent", "red"), alpha=T)( 30 )
leaflet(Dens) %>%
setView(-118.5, 38, 5) %>%
addTiles('http://{s}.tile.thunderforest.com/transport-dark/{z}/{x}/{y}.png',
'&copy; <a href="http://www.opencyclemap.org">OpenCycleMap</a>, &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>') %>%
addCircles(Dens$longRange, Dens$latRange, weight = ~toVary, radius=40, color="red", stroke = TRUE, fillOpacity = 0.9) %>%
addRasterImage(surface1, colors = col1, project=F)
addRasterImage(surface2, colors = col2, project=F)
addRasterImage(surface3, colors = col3, project=F)
leaflet(Dens) %>%
setView(-118.5, 38, 5) %>%
addTiles('http://{s}.tile.thunderforest.com/transport-dark/{z}/{x}/{y}.png',
'&copy; <a href="http://www.opencyclemap.org">OpenCycleMap</a>, &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>') %>%
addCircles(Dens$longRange, Dens$latRange, weight = ~toVary, radius=40, color="red", stroke = TRUE, fillOpacity = 0.9) %>%
addRasterImage(surface1, colors = col1, project=F) %>%
addRasterImage(surface2, colors = col2, project=F) %>%
addRasterImage(surface3, colors = col3, project=F)
readShapeLines("V:/3730Data/377STRs/Wildlife/Lake & Colusa Tule Elk Project/Tule GIS/shapefiles, layers, etc")
readShapeLines("V:/3730Data/377STRs/Wildlife/Lake & Colusa Tule Elk Project/Tule GIS/shapefiles, layers, etc/BearValleyEMU.shp")
Line = readShapeLines("V:/3730Data/377STRs/Wildlife/Lake & Colusa Tule Elk Project/Tule GIS/shapefiles, layers, etc/BearValleyEMU.shp")
Line = readShapeLines("V:/3730Data/377STRs/Wildlife/Lake & Colusa Tule Elk Project/Tule GIS/shapefiles, layers, etc/BearValleyEMU")
readOGR("V:/3730Data/377STRs/Wildlife/Lake & Colusa Tule Elk Project/Tule GIS/shapefiles, layers, etc/BearValleyEMU.shp")
readOGR("V:/3730Data/377STRs/Wildlife/Lake & Colusa Tule Elk Project/Tule GIS/shapefiles, layers, etc/BearValleyEMU.shp","BearValleyEMU")
readOGR("V:/3730Data/377STRs/Wildlife/Lake & Colusa Tule Elk Project/Tule GIS/shapefiles, layers, etc/BearValleyEMU.shp","BearValleyEMU.dbf")
Line = readShapeLines("V:/3730Data/377STRs/Wildlife/Lake & Colusa Tule Elk Project/Tule GIS/shapefiles, layers, etc/BearValleyEMU.shp")
?readShapeLIne
?readShapeLine
?readShapeLines
Line = readShapeLines("V:/3730Data/377STRs/Wildlife/Lake & Colusa Tule Elk Project/Tule GIS/shapefiles, layers, etc/BearValleyEMU")
list.files("V:/3730Data/377STRs/Wildlife/Lake & Colusa Tule Elk Project/Tule GIS/shapefiles, layers, etc/")
Line = readShapeLines("V:/3730Data/377STRs/Wildlife/Lake & Colusa Tule Elk Project/Tule GIS/shapefiles, layers, etc/CDFW Elk Hunt Zones/BearValleyEMU")
Line
CA = map('state', regions="California", plot=F, fill=T)
IDs = sapply(strsplit(CA$names, ":"), function(x) x[1])
CA.poly = map2SpatialPolygons(CA, IDs = IDs)
CA.poly
xWin=as.owin.SpatialPolygons(Line)
Line = readShapePoly("V:/3730Data/377STRs/Wildlife/Lake & Colusa Tule Elk Project/Tule GIS/shapefiles, layers, etc/CDFW Elk Hunt Zones/BearValleyEMU")
xWin=as.owin.SpatialPolygons(Line)
FakeCluster=read.csv("./ElkTest.csv", header=T)
AgeClass="BULL"
AgeClassColumn=which(colnames(FakeCluster)==AgeClass)
toVary=FakeCluster[,AgeClassColumn]
longRange = FakeCluster$X
latRange = FakeCluster$Y
Dens = data.frame(longRange,latRange,toVary, row.names=NULL)
Dens = Dens[complete.cases(Dens),]
Dens$toVary=Dens$toVary - min(Dens$toVary)
Dens$toVary=Dens$toVary/(max(Dens$toVary))
Dens$toVary=Dens$toVary*10
readShapeSpatial("V:/3730Data/377STRs/Wildlife/Lake & Colusa Tule Elk Project/Tule GIS/shapefiles, layers, etc")
Line = readShapeLines("V:/3730Data/377STRs/Wildlife/Lake & Colusa Tule Elk Project/Tule GIS/shapefiles, layers, etc/CDFW Elk Hunt Zones/BearValleyEMU")
Line = readShapePoly("V:/3730Data/377STRs/Wildlife/Lake & Colusa Tule Elk Project/Tule GIS/shapefiles, layers, etc/CDFW Elk Hunt Zones/BearValleyEMU")
xWin=as.owin.SpatialPolygons(Line)
pts <- as.ppp(Dens,W=xWin)
pt.dens = density(pts,weights=pts$marks, sigma=0.1, eps=0.005)
surface = raster(pt.dens)
crs(surface) = sp::CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
surface1=projectRasterForLeaflet(surface)
col1=colorRampPalette(c("transparent", "yellow"), alpha=T)( 30 )
leaflet(Dens) %>%
setView(-118.5, 38, 5) %>%
addTiles('http://{s}.tile.thunderforest.com/transport-dark/{z}/{x}/{y}.png',
'&copy; <a href="http://www.opencyclemap.org">OpenCycleMap</a>, &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>') %>%
addCircles(Dens$longRange, Dens$latRange, weight = ~toVary, radius=40, color="red", stroke = TRUE, fillOpacity = 0.9) %>%
addRasterImage(surface1, colors = col1, project=F)
surface1=projectRasterForLeaflet(surface)
leaflet(Dens) %>%
setView(-118.5, 38, 5) %>%
addTiles('http://{s}.tile.thunderforest.com/transport-dark/{z}/{x}/{y}.png',
'&copy; <a href="http://www.opencyclemap.org">OpenCycleMap</a>, &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>') %>%
addCircles(Dens$longRange, Dens$latRange, weight = ~toVary, radius=40, color="red", stroke = TRUE, fillOpacity = 0.9) %>%
addRasterImage(surface1, colors = col1, project=F)
xWin
pts
FakeCluster=read.csv("./ElkTest.csv", header=T)
AgeClass="COW"
AgeClassColumn=which(colnames(FakeCluster)==AgeClass)
toVary=FakeCluster[,AgeClassColumn]
longRange = FakeCluster$X
latRange = FakeCluster$Y
Dens = data.frame(longRange,latRange,toVary, row.names=NULL)
Dens = Dens[complete.cases(Dens),]
Dens$toVary=Dens$toVary - min(Dens$toVary)
Dens$toVary=Dens$toVary/(max(Dens$toVary))
Dens$toVary=Dens$toVary*10
readShapeSpatial("V:/3730Data/377STRs/Wildlife/Lake & Colusa Tule Elk Project/Tule GIS/shapefiles, layers, etc")
#  Line = readShapeLines("V:/3730Data/377STRs/Wildlife/Lake & Colusa Tule Elk Project/Tule GIS/shapefiles, layers, etc/CDFW Elk Hunt Zones/BearValleyEMU")
Line = readShapePoly("V:/3730Data/377STRs/Wildlife/Lake & Colusa Tule Elk Project/Tule GIS/shapefiles, layers, etc/CDFW Elk Hunt Zones/BearValleyEMU")
xWin=as.owin.SpatialPolygons(Line)
pts <- as.ppp(Dens,W=xWin)
Line = readShapePoly("V:/3730Data/377STRs/Wildlife/Lake & Colusa Tule Elk Project/Tule GIS/shapefiles, layers, etc/CDFW Elk Hunt Zones/BearValleyEMU")
xWin=as.owin.SpatialPolygons(Line)
xWin
pts <- as.ppp(Dens,W=xWin)
pts
Line = readShapePoly("V:/3730Data/377STRs/Wildlife/Lake & Colusa Tule Elk Project/Tule GIS/shapefiles, layers, etc/CDFW Elk Hunt Zones/CacheCreekEMU")
xWin=as.owin.SpatialPolygons(Line)
pts <- as.ppp(Dens,W=xWin)
AgeClass="BULL"
FakeCluster=read.csv("./ElkTest.csv", header=T)
AgeClass="BULL"
AgeClassColumn=which(colnames(FakeCluster)==AgeClass)
toVary=FakeCluster[,AgeClassColumn]
longRange = FakeCluster$X
latRange = FakeCluster$Y
Dens = data.frame(longRange,latRange,toVary, row.names=NULL)
Dens = Dens[complete.cases(Dens),]
Dens$toVary=Dens$toVary - min(Dens$toVary)
Dens$toVary=Dens$toVary/(max(Dens$toVary))
Dens$toVary=Dens$toVary*10
#  Line = readShapeLines("V:/3730Data/377STRs/Wildlife/Lake & Colusa Tule Elk Project/Tule GIS/shapefiles, layers, etc/CDFW Elk Hunt Zones/BearValleyEMU")
Line = readShapePoly("V:/3730Data/377STRs/Wildlife/Lake & Colusa Tule Elk Project/Tule GIS/shapefiles, layers, etc/CDFW Elk Hunt Zones/CacheCreekEMU")
xWin=as.owin.SpatialPolygons(Line)
pts <- as.ppp(Dens,W=xWin)
pt.dens = density(pts,weights=pts$marks, sigma=0.1, eps=0.005)
surface = raster(pt.dens)
crs(surface) = sp::CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
surface1=projectRasterForLeaflet(surface)
col1=colorRampPalette(c("transparent", "yellow"), alpha=T)( 30 )
?readShapePoly
Line = readShapePoly("V:/3730Data/377STRs/Wildlife/Lake & Colusa Tule Elk Project/Tule GIS/shapefiles, layers, etc/CDFW Elk Hunt Zones/CacheCreekEMU")
crs(Line) = sp::CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
xWin=as.owin.SpatialPolygons(Line)
xWin
pts <- as.ppp(Dens,W=xWin)
Line = projectRasterForLeaflet(Line)
Line = readShapePoly("V:/3730Data/377STRs/Wildlife/Lake & Colusa Tule Elk Project/Tule GIS/shapefiles, layers, etc/CDFW Elk Hunt Zones/CacheCreekEMU", proj4string="+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
Line = readShapePoly("V:/3730Data/377STRs/Wildlife/Lake & Colusa Tule Elk Project/Tule GIS/shapefiles, layers, etc/CDFW Elk Hunt Zones/CacheCreekEMU", proj4string=CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
Line = projectRasterForLeaflet(Line)
Line = projectRasterForLeaflet(Line)
Line = readShapePoly("V:/3730Data/377STRs/Wildlife/Lake & Colusa Tule Elk Project/Tule GIS/shapefiles, layers, etc/CDFW Elk Hunt Zones/CacheCreekEMU", proj4string=CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
xWin=as.owin.SpatialPolygons(Line)
pts <- as.ppp(Dens,W=xWin)
FakeCluster=read.csv("./ElkTest.csv", header=T)
AgeClass="COW"
AgeClassColumn=which(colnames(FakeCluster)==AgeClass)
toVary=FakeCluster[,AgeClassColumn]
longRange = FakeCluster$X
latRange = FakeCluster$Y
Dens = data.frame(longRange,latRange,toVary, row.names=NULL)
Dens = Dens[complete.cases(Dens),]
Dens$toVary=Dens$toVary - min(Dens$toVary)
Dens$toVary=Dens$toVary/(max(Dens$toVary))
Dens$toVary=Dens$toVary*10
xWin = owin(c(-123.2,-122.3),c(38.9,39.6))
pts <- as.ppp(Dens,W=xWin)
pt.dens = density(pts,weights=pts$marks, sigma=0.1, eps=0.005)
surface = raster(pt.dens)
crs(surface) = sp::CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
surface1=projectRasterForLeaflet(surface)
col1=colorRampPalette(c("transparent", "yellow"), alpha=T)( 30 )
AgeClass="CALF"
AgeClassColumn=which(colnames(FakeCluster)==AgeClass)
toVary=FakeCluster[,AgeClassColumn]
longRange = FakeCluster$X
latRange = FakeCluster$Y
Dens = data.frame(longRange,latRange,toVary, row.names=NULL)
Dens = Dens[complete.cases(Dens),]
Dens$toVary=Dens$toVary - min(Dens$toVary)
Dens$toVary=Dens$toVary/(max(Dens$toVary))
Dens$toVary=Dens$toVary*10
xWin = owin(c(-123.2,-122.3),c(38.9,39.6))
pts <- as.ppp(Dens,W=xWin)
pt.dens = density(pts,weights=pts$marks, sigma=0.1, eps=0.005)
surface = raster(pt.dens)
crs(surface) = sp::CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
surface2=projectRasterForLeaflet(surface)
col2=colorRampPalette(c("transparent", "blue"), alpha=T)( 30 )
AgeClass="BULL"
AgeClassColumn=which(colnames(FakeCluster)==AgeClass)
toVary=FakeCluster[,AgeClassColumn]
longRange = FakeCluster$X
latRange = FakeCluster$Y
Dens = data.frame(longRange,latRange,toVary, row.names=NULL)
Dens = Dens[complete.cases(Dens),]
Dens$toVary=Dens$toVary - min(Dens$toVary)
Dens$toVary=Dens$toVary/(max(Dens$toVary))
Dens$toVary=Dens$toVary*10
xWin = owin(c(-123.2,-122.3),c(38.9,39.6))
pts <- as.ppp(Dens,W=xWin)
pt.dens = density(pts,weights=pts$marks, sigma=0.1, eps=0.005)
surface = raster(pt.dens)
crs(surface) = sp::CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
surface3=projectRasterForLeaflet(surface)
col3=colorRampPalette(c("transparent", "red"), alpha=T)( 30 )
leaflet(Dens) %>%
setView(-118.5, 38, 5) %>%
addTiles('http://{s}.tile.thunderforest.com/transport-dark/{z}/{x}/{y}.png',
'&copy; <a href="http://www.opencyclemap.org">OpenCycleMap</a>, &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>') %>%
addCircles(Dens$longRange, Dens$latRange, weight = ~toVary, radius=40, color="red", stroke = TRUE, fillOpacity = 0.9) %>%
addRasterImage(surface1, colors = col1, project=F) %>%
addRasterImage(surface2, colors = col2, project=F) %>%
addRasterImage(surface3, colors = col3, project=F)
FakeCluster=read.csv("./ElkTest.csv", header=T)
AgeClass="COW"
AgeClassColumn=which(colnames(FakeCluster)==AgeClass)
toVary=FakeCluster[,AgeClassColumn]
longRange = FakeCluster$X
latRange = FakeCluster$Y
CowDens = data.frame(longRange,latRange,toVary, row.names=NULL)
CowDens = CowDens[complete.cases(CowDens),]
CowDens$toVary=CowDens$toVary - min(CowDens$toVary)
CowDens$toVary=CowDens$toVary/(max(CowDens$toVary))
CowDens$toVary=CowDens$toVary*10
xWin = owin(c(-123.2,-122.3),c(38.9,39.6))
pts <- as.ppp(CowDens,W=xWin)
pt.CowDens = density(pts,weights=pts$marks, sigma=0.1, eps=0.005)
surface = raster(pt.CowDens)
crs(surface) = sp::CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
surface1=projectRasterForLeaflet(surface)
col1=colorRampPalette(c("transparent", "yellow"), alpha=T)( 30 )
AgeClass="CALF"
AgeClassColumn=which(colnames(FakeCluster)==AgeClass)
toVary=FakeCluster[,AgeClassColumn]
longRange = FakeCluster$X
latRange = FakeCluster$Y
CalfDens = data.frame(longRange,latRange,toVary, row.names=NULL)
CalfDens = CalfDens[complete.cases(CalfDens),]
CalfDens$toVary=CalfDens$toVary - min(CalfDens$toVary)
CalfDens$toVary=CalfDens$toVary/(max(CalfDens$toVary))
CalfDens$toVary=CalfDens$toVary*10
xWin = owin(c(-123.2,-122.3),c(38.9,39.6))
pts <- as.ppp(CalfDens,W=xWin)
pt.CalfDens = density(pts,weights=pts$marks, sigma=0.1, eps=0.005)
surface = raster(pt.CalfDens)
crs(surface) = sp::CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
surface2=projectRasterForLeaflet(surface)
col2=colorRampPalette(c("transparent", "blue"), alpha=T)( 30 )
AgeClass="BULL"
AgeClassColumn=which(colnames(FakeCluster)==AgeClass)
toVary=FakeCluster[,AgeClassColumn]
longRange = FakeCluster$X
latRange = FakeCluster$Y
BullDens = data.frame(longRange,latRange,toVary, row.names=NULL)
BullDens = BullDens[complete.cases(BullDens),]
BullDens$toVary=BullDens$toVary - min(BullDens$toVary)
BullDens$toVary=BullDens$toVary/(max(BullDens$toVary))
BullDens$toVary=BullDens$toVary*10
xWin = owin(c(-123.2,-122.3),c(38.9,39.6))
pts <- as.ppp(BullDens,W=xWin)
pt.BullDens = density(pts,weights=pts$marks, sigma=0.1, eps=0.005)
surface = raster(pt.BullDens)
crs(surface) = sp::CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
surface3=projectRasterForLeaflet(surface)
col3=colorRampPalette(c("transparent", "red"), alpha=T)( 30 )
leaflet() %>%
setView(-118.5, 38, 5) %>%
addTiles('http://{s}.tile.thunderforest.com/transport-dark/{z}/{x}/{y}.png',
'&copy; <a href="http://www.opencyclemap.org">OpenCycleMap</a>, &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>') %>%
addCircles(CowDens$longRange, CowDens$latRange, weight = CowDens$toVary, color="yellow", stroke = TRUE, fillOpacity = 0.9) %>%
addCircles(BullDens$longRange, BullDens$latRange, weight = BullDens$toVary, color="blue", stroke = TRUE, fillOpacity = 0.9) %>%
addCircles(CalfDens$longRange, CalfDens$latRange, weight = CalfDens$toVary, color="red", stroke = TRUE, fillOpacity = 0.9) %>%
addRasterImage(surface1, colors = col1, project=F) %>%
addRasterImage(surface2, colors = col2, project=F) %>%
addRasterImage(surface3, colors = col3, project=F)
FakeCluster=read.csv("./ElkTest.csv", header=T)
AgeClass="COW"
AgeClassColumn=which(colnames(FakeCluster)==AgeClass)
toVary=FakeCluster[,AgeClassColumn]
longRange = FakeCluster$X
latRange = FakeCluster$Y
CowDens = data.frame(longRange,latRange,toVary, row.names=NULL)
CowDens = CowDens[complete.cases(CowDens),]
CowDens$toVary=CowDens$toVary - min(CowDens$toVary)
CowDens$toVary=CowDens$toVary/(max(CowDens$toVary))
CowDens$toVary=CowDens$toVary*10
xWin = owin(c(-124.2,-121.3),c(37.9,40.6))
pts <- as.ppp(CowDens,W=xWin)
pt.CowDens = density(pts,weights=pts$marks, sigma=0.1, eps=0.005)
surface = raster(pt.CowDens)
crs(surface) = sp::CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
surface1=projectRasterForLeaflet(surface)
col1=colorRampPalette(c("transparent", "yellow"), alpha=T)( 30 )
AgeClass="CALF"
AgeClassColumn=which(colnames(FakeCluster)==AgeClass)
toVary=FakeCluster[,AgeClassColumn]
longRange = FakeCluster$X
latRange = FakeCluster$Y
CalfDens = data.frame(longRange,latRange,toVary, row.names=NULL)
CalfDens = CalfDens[complete.cases(CalfDens),]
CalfDens$toVary=CalfDens$toVary - min(CalfDens$toVary)
CalfDens$toVary=CalfDens$toVary/(max(CalfDens$toVary))
CalfDens$toVary=CalfDens$toVary*10
xWin = owin(c(-124.2,-121.3),c(37.9,40.6))
pts <- as.ppp(CalfDens,W=xWin)
pt.CalfDens = density(pts,weights=pts$marks, sigma=0.1, eps=0.005)
surface = raster(pt.CalfDens)
crs(surface) = sp::CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
surface2=projectRasterForLeaflet(surface)
col2=colorRampPalette(c("transparent", "blue"), alpha=T)( 30 )
AgeClass="BULL"
AgeClassColumn=which(colnames(FakeCluster)==AgeClass)
toVary=FakeCluster[,AgeClassColumn]
longRange = FakeCluster$X
latRange = FakeCluster$Y
BullDens = data.frame(longRange,latRange,toVary, row.names=NULL)
BullDens = BullDens[complete.cases(BullDens),]
BullDens$toVary=BullDens$toVary - min(BullDens$toVary)
BullDens$toVary=BullDens$toVary/(max(BullDens$toVary))
BullDens$toVary=BullDens$toVary*10
xWin = owin(c(-124.2,-121.3),c(37.9,40.6))
pts <- as.ppp(BullDens,W=xWin)
pt.BullDens = density(pts,weights=pts$marks, sigma=0.1, eps=0.005)
surface = raster(pt.BullDens)
crs(surface) = sp::CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
surface3=projectRasterForLeaflet(surface)
col3=colorRampPalette(c("transparent", "red"), alpha=T)( 30 )
leaflet() %>%
setView(-118.5, 38, 5) %>%
addTiles('http://{s}.tile.thunderforest.com/transport-dark/{z}/{x}/{y}.png',
'&copy; <a href="http://www.opencyclemap.org">OpenCycleMap</a>, &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>') %>%
addCircles(CowDens$longRange, CowDens$latRange, weight = CowDens$toVary, color="yellow", stroke = TRUE, fillOpacity = 0.9) %>%
addCircles(BullDens$longRange, BullDens$latRange, weight = BullDens$toVary, color="blue", stroke = TRUE, fillOpacity = 0.9) %>%
addCircles(CalfDens$longRange, CalfDens$latRange, weight = CalfDens$toVary, color="red", stroke = TRUE, fillOpacity = 0.9) %>%
addRasterImage(surface1, colors = col1, project=F) %>%
addRasterImage(surface2, colors = col2, project=F) %>%
addRasterImage(surface3, colors = col3, project=F)
col3=colorRampPalette(c("transparent", "red"), alpha=T)( 10 )
leaflet() %>%
setView(-118.5, 38, 5) %>%
addTiles('http://{s}.tile.thunderforest.com/transport-dark/{z}/{x}/{y}.png',
'&copy; <a href="http://www.opencyclemap.org">OpenCycleMap</a>, &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>') %>%
addCircles(CowDens$longRange, CowDens$latRange, weight = CowDens$toVary, color="yellow", stroke = TRUE, fillOpacity = 0.9) %>%
addCircles(BullDens$longRange, BullDens$latRange, weight = BullDens$toVary, color="blue", stroke = TRUE, fillOpacity = 0.9) %>%
addCircles(CalfDens$longRange, CalfDens$latRange, weight = CalfDens$toVary, color="red", stroke = TRUE, fillOpacity = 0.9) %>%
addRasterImage(surface1, colors = col1, project=F) %>%
addRasterImage(surface2, colors = col2, project=F) %>%
addRasterImage(surface3, colors = col3, project=F)
col3=colorRampPalette(c("transparent", "white"), alpha=T)( 30 )
leaflet() %>%
setView(-118.5, 38, 5) %>%
addTiles('http://{s}.tile.thunderforest.com/transport-dark/{z}/{x}/{y}.png',
'&copy; <a href="http://www.opencyclemap.org">OpenCycleMap</a>, &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>') %>%
addCircles(CowDens$longRange, CowDens$latRange, weight = CowDens$toVary, color="yellow", stroke = TRUE, fillOpacity = 0.9) %>%
addCircles(BullDens$longRange, BullDens$latRange, weight = BullDens$toVary, color="blue", stroke = TRUE, fillOpacity = 0.9) %>%
addCircles(CalfDens$longRange, CalfDens$latRange, weight = CalfDens$toVary, color="red", stroke = TRUE, fillOpacity = 0.9) %>%
addRasterImage(surface1, colors = col1, project=F) %>%
addRasterImage(surface2, colors = col2, project=F) %>%
addRasterImage(surface3, colors = col3, project=F)
leaflet() %>%
setView(-118.5, 38, 5) %>%
addTiles('http://stamen-tiles-{s}.a.ssl.fastly.net/watercolor/{z}/{x}/{y}.{ext}',
attribution='Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>') %>%
addCircles(CowDens$longRange, CowDens$latRange, weight = CowDens$toVary, color="yellow", stroke = TRUE, fillOpacity = 0.9) %>%
addCircles(BullDens$longRange, BullDens$latRange, weight = BullDens$toVary, color="blue", stroke = TRUE, fillOpacity = 0.9) %>%
addCircles(CalfDens$longRange, CalfDens$latRange, weight = CalfDens$toVary, color="red", stroke = TRUE, fillOpacity = 0.9) %>%
addRasterImage(surface1, colors = col1, project=F) %>%
addRasterImage(surface2, colors = col2, project=F) %>%
addRasterImage(surface3, colors = col3, project=F)
leaflet() %>%
setView(-118.5, 38, 5) %>%
addTiles('http://{s}.tile.opentopomap.org/{z}/{x}/{y}.png',
attribution='Map data: &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>, <a href="http://viewfinderpanoramas.org">SRTM</a> | Map style: &copy; <a href="https://opentopomap.org">OpenTopoMap</a> (<a href="https://creativecommons.org/licenses/by-sa/3.0/">CC-BY-SA</a>') %>%
addCircles(CowDens$longRange, CowDens$latRange, weight = CowDens$toVary, color="yellow", stroke = TRUE, fillOpacity = 0.9) %>%
addCircles(BullDens$longRange, BullDens$latRange, weight = BullDens$toVary, color="blue", stroke = TRUE, fillOpacity = 0.9) %>%
addCircles(CalfDens$longRange, CalfDens$latRange, weight = CalfDens$toVary, color="red", stroke = TRUE, fillOpacity = 0.9) %>%
addRasterImage(surface1, colors = col1, project=F) %>%
addRasterImage(surface2, colors = col2, project=F) %>%
addRasterImage(surface3, colors = col3, project=F)
col3=colorRampPalette(c("transparent", "green"), alpha=T)( 30 )
leaflet() %>%
setView(-118.5, 38, 5) %>%
addTiles('http://{s}.tile.opentopomap.org/{z}/{x}/{y}.png',
attribution='Map data: &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>, <a href="http://viewfinderpanoramas.org">SRTM</a> | Map style: &copy; <a href="https://opentopomap.org">OpenTopoMap</a> (<a href="https://creativecommons.org/licenses/by-sa/3.0/">CC-BY-SA</a>') %>%
addCircles(CowDens$longRange, CowDens$latRange, weight = CowDens$toVary, color="yellow", stroke = TRUE, fillOpacity = 0.9) %>%
addCircles(BullDens$longRange, BullDens$latRange, weight = BullDens$toVary, color="blue", stroke = TRUE, fillOpacity = 0.9) %>%
addCircles(CalfDens$longRange, CalfDens$latRange, weight = CalfDens$toVary, color="red", stroke = TRUE, fillOpacity = 0.9) %>%
addRasterImage(surface1, colors = col1, project=F) %>%
addRasterImage(surface2, colors = col2, project=F) %>%
addRasterImage(surface3, colors = col3, project=F)
FakeCluster=read.csv("./ElkTest.csv", header=T)
AgeClass="COW"
AgeClassColumn=which(colnames(FakeCluster)==AgeClass)
toVary=FakeCluster[,AgeClassColumn]
longRange = FakeCluster$X
latRange = FakeCluster$Y
CowDens = data.frame(longRange,latRange,toVary, row.names=NULL)
CowDens = CowDens[complete.cases(CowDens),]
CowDens$toVary=CowDens$toVary - min(CowDens$toVary)
CowDens$toVary=CowDens$toVary/(max(CowDens$toVary))
CowDens$toVary=CowDens$toVary*10
xWin = owin(c(-124.2,-121.3),c(37.9,40.6))
pts <- as.ppp(CowDens,W=xWin)
pt.CowDens = density(pts,weights=pts$marks, sigma=0.1, eps=0.005)
surface = raster(pt.CowDens)
crs(surface) = sp::CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
surface1=projectRasterForLeaflet(surface)
col1=colorRampPalette(c("transparent", "white"), alpha=T)( 30 )
AgeClass="CALF"
AgeClassColumn=which(colnames(FakeCluster)==AgeClass)
toVary=FakeCluster[,AgeClassColumn]
longRange = FakeCluster$X
latRange = FakeCluster$Y
CalfDens = data.frame(longRange,latRange,toVary, row.names=NULL)
CalfDens = CalfDens[complete.cases(CalfDens),]
CalfDens$toVary=CalfDens$toVary - min(CalfDens$toVary)
CalfDens$toVary=CalfDens$toVary/(max(CalfDens$toVary))
CalfDens$toVary=CalfDens$toVary*10
xWin = owin(c(-124.2,-121.3),c(37.9,40.6))
pts <- as.ppp(CalfDens,W=xWin)
pt.CalfDens = density(pts,weights=pts$marks, sigma=0.1, eps=0.005)
surface = raster(pt.CalfDens)
crs(surface) = sp::CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
surface2=projectRasterForLeaflet(surface)
col2=colorRampPalette(c("transparent", "red"), alpha=T)( 30 )
AgeClass="BULL"
AgeClassColumn=which(colnames(FakeCluster)==AgeClass)
toVary=FakeCluster[,AgeClassColumn]
longRange = FakeCluster$X
latRange = FakeCluster$Y
BullDens = data.frame(longRange,latRange,toVary, row.names=NULL)
BullDens = BullDens[complete.cases(BullDens),]
BullDens$toVary=BullDens$toVary - min(BullDens$toVary)
BullDens$toVary=BullDens$toVary/(max(BullDens$toVary))
BullDens$toVary=BullDens$toVary*10
xWin = owin(c(-124.2,-121.3),c(37.9,40.6))
pts <- as.ppp(BullDens,W=xWin)
pt.BullDens = density(pts,weights=pts$marks, sigma=0.1, eps=0.005)
surface = raster(pt.BullDens)
crs(surface) = sp::CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
surface3=projectRasterForLeaflet(surface)
col3=colorRampPalette(c("transparent", "darkgreen"), alpha=T)( 30 )
leaflet() %>%
setView(-118.5, 38, 5) %>%
addTiles('http://{s}.tile.opentopomap.org/{z}/{x}/{y}.png',
attribution='Map data: &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>, <a href="http://viewfinderpanoramas.org">SRTM</a> | Map style: &copy; <a href="https://opentopomap.org">OpenTopoMap</a> (<a href="https://creativecommons.org/licenses/by-sa/3.0/">CC-BY-SA</a>') %>%
addCircles(CowDens$longRange, CowDens$latRange, weight = CowDens$toVary, color="black", stroke = TRUE, fillOpacity = 0.9) %>%
addCircles(BullDens$longRange, BullDens$latRange, weight = BullDens$toVary, color="black", stroke = TRUE, fillOpacity = 0.9) %>%
addCircles(CalfDens$longRange, CalfDens$latRange, weight = CalfDens$toVary, color="black", stroke = TRUE, fillOpacity = 0.9) %>%
addRasterImage(surface1, colors = col1, project=F) %>%
addRasterImage(surface2, colors = col2, project=F) %>%
addRasterImage(surface3, colors = col3, project=F)
